// <auto-generated />
using System;
using BangumiRSSAggregator.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BangumiRSSAggregator.Server.Migrations
{
    [DbContext(typeof(BangumiDb))]
    [Migration("20240814161626_AddPubDateForFeedItem")]
    partial class AddPubDateForFeedItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("BangumiRSSAggregator.Server.Models.BangumiItem", b =>
                {
                    b.Property<int>("FeedGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FeedItemId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("FeedGroupId", "FeedItemId");

                    b.HasIndex("FeedItemId");

                    b.ToTable("BangumiItems");
                });

            modelBuilder.Entity("BangumiRSSAggregator.Server.Models.EnabledRule", b =>
                {
                    b.Property<int>("FeedRuleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FeedSourceId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("FeedRuleId", "FeedSourceId");

                    b.HasIndex("FeedSourceId");

                    b.ToTable("EnabledRules");
                });

            modelBuilder.Entity("BangumiRSSAggregator.Server.Models.FeedGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FeedGroups");
                });

            modelBuilder.Entity("BangumiRSSAggregator.Server.Models.FeedItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FeedSourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PubDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RawContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FeedSourceId");

                    b.ToTable("FeedItems");
                });

            modelBuilder.Entity("BangumiRSSAggregator.Server.Models.FeedRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Replacement")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FeedRules");
                });

            modelBuilder.Entity("BangumiRSSAggregator.Server.Models.FeedSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("UpdateInterval")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FeedSources");
                });

            modelBuilder.Entity("BangumiRSSAggregator.Server.Models.SourceGroup", b =>
                {
                    b.Property<int>("FeedGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FeedSourceId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RuleId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("FeedGroupId", "FeedSourceId");

                    b.HasIndex("FeedSourceId");

                    b.ToTable("SourceGroups");
                });

            modelBuilder.Entity("BangumiRSSAggregator.Server.Models.BangumiItem", b =>
                {
                    b.HasOne("BangumiRSSAggregator.Server.Models.FeedGroup", "FeedGroup")
                        .WithMany()
                        .HasForeignKey("FeedGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BangumiRSSAggregator.Server.Models.FeedItem", "FeedItem")
                        .WithMany()
                        .HasForeignKey("FeedItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeedGroup");

                    b.Navigation("FeedItem");
                });

            modelBuilder.Entity("BangumiRSSAggregator.Server.Models.EnabledRule", b =>
                {
                    b.HasOne("BangumiRSSAggregator.Server.Models.FeedRule", "FeedRule")
                        .WithMany()
                        .HasForeignKey("FeedRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BangumiRSSAggregator.Server.Models.FeedSource", "FeedSource")
                        .WithMany()
                        .HasForeignKey("FeedSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeedRule");

                    b.Navigation("FeedSource");
                });

            modelBuilder.Entity("BangumiRSSAggregator.Server.Models.FeedItem", b =>
                {
                    b.HasOne("BangumiRSSAggregator.Server.Models.FeedSource", "FeedSource")
                        .WithMany("FeedItems")
                        .HasForeignKey("FeedSourceId");

                    b.Navigation("FeedSource");
                });

            modelBuilder.Entity("BangumiRSSAggregator.Server.Models.SourceGroup", b =>
                {
                    b.HasOne("BangumiRSSAggregator.Server.Models.FeedGroup", "FeedGroup")
                        .WithMany()
                        .HasForeignKey("FeedGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BangumiRSSAggregator.Server.Models.FeedSource", "FeedSource")
                        .WithMany()
                        .HasForeignKey("FeedSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeedGroup");

                    b.Navigation("FeedSource");
                });

            modelBuilder.Entity("BangumiRSSAggregator.Server.Models.FeedSource", b =>
                {
                    b.Navigation("FeedItems");
                });
#pragma warning restore 612, 618
        }
    }
}
